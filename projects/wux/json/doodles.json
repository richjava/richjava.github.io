{
    "doodles": [   
            "<css-doodle>:doodle {@grid: 15 / 61.8vmin;@shape: circle;}border-radius: 50%;border: calc(1px + .05vmin) solid transparent;--r: @rand(360deg);--n: calc(@abs(@abs(@row() - 8) + @abs(@col() - 8) - 15) / 15);transform: rotate(var(--r));border-left-color: hsl(calc(var(--n) * 360 + 120), 60%, 60%);animation: spin calc(.6s / var(--n)) linear infinite;@keyframes spin {to { transform: rotate(calc(var(--r) + @pick(1turn, -1turn)));}}</css-doodle>",         
            "<css-doodle>@shape: circle;:after {content: \"\";@size: 2vmax;border: solid 1.5vmax hsla(calc(360 - @index() * 4),70%, 68%, @rand(.8));border-radius: 100%;transform: translate(0,-0.5em);}:before {content: \"\";@size: .01vmax;border: solid 1.5vmax hsla(calc(var(--n) * 280 + 120), 99%, 44%,var(--n));border-radius: 100%;position: absolute;transform: translate(0,-0.5em);}:doodle {@grid: 15 / 100vmax;} transform: rotate(@rand(360)deg);background: hsla(calc(240 - 6 * @row() * @col()),70%, 68%, @rand(.8) ); transition: .2s @rand(.6s); @size: 80%; margin: auto; :hover{ transform: rotate(@rand(360)deg); transition: .2s; } </css-doodle>", 
            "<css-doodle> :doodle { @grid: 8 / 100vmax; } transition: 2s @rand(.6s); border-radius: @pick(100% 0, 0 100%); will-change: transform; transform: scale(@rand(.25, 1.25)); background: hsla( calc(240 - 6 * @row() * @col()), 70%, 68%, @rand(.8) ); </css-doodle>", 
            "<css-doodle> :doodle { @grid: 7 / 100vmax; } @place-cell: center; @size: calc(@index() * 1.55%); transition: .2s ease; transform: rotate(calc(@index() * 5deg)); border-radius: 30%; border: 1px solid hsla( calc(10 + 4 * @index()), 70%, 68%, @rand(.8) ); </css-doodle>", 
            "<css-doodle> :doodle { @grid: 11 / 100vmax; } --n: calc( @abs(@abs(@row() - 6) + @abs(@col() - 6) - 11) / 11 ); margin: -10%; z-index: 1; transition: .5s cubic-bezier(.175, .885, .32, 1.275) @rand(500ms); transform: rotate(45deg); border: 1px solid; border-color: hsla( calc(var(--n) * 280 + 120), 99%, 44%, var(--n) ); </css-doodle> ", 
            "<css-doodle> :doodle { @grid: 7 / 100vmax; } @shape: clover 5; background: hsla( calc(360 - @index() * 4), 70%, 68%, @rand(.8) ); transition: .5s cubic-bezier(.175, .885, .32, 1.275) @rand(500ms); transform: scale(@rand(.2, 1.5)) translate( @rand(-50%, 50%), @rand(-50%, 50%) ); </css-doodle> ", 
            "<css-doodle> </css-doodle>`, `<css-doodle grid=\"14\"> :doodle { size: 100vmax; perspective: 300px; } clip-path: @shape(fish); will-change: transform; background: hsla( calc(320 + @index() * 2), 80%, 60%, @rand(.1, .8) ); animation-timing-function: linear; animation-iteration-count: infinite; animation-duration: @rand(5s, 16s, .1); --tz: @rand(10vmax, 80vmax); --rt: @rand(120deg, 220deg); @odd { animation-name: r-odd; transform: rotateY(0) translateZ(var(--tz)); } @even { animation-name: r-even; transform: rotateZ(var(--rt)) rotateY(0) translateZ(var(--tz)); } @keyframes r-odd { to { transform: rotateY(1turn) translateZ(var(--tz)); } } @keyframes r-even { to { transform: rotateZ(var(--rt)) rotateY(1turn) translateZ(var(--tz)); } } </css-doodle>",
            "<css-doodle grid=\"7\"> :doodle { size: 100vmax; min-size: 600px; } border-radius: 24%; border: 1px solid hsla( calc(180 + 5 * @index()), 80%, 80%, .7 ); transition: .2s ease @rand(500ms); transform: rotate(@pick(60deg, -60deg)) scale(1.2); </css-doodle>" 
        ]
    
}